---
title: "lab1"
author: "Steven Mitchell"
format:
  html: 
    code-fold: true
    toc: true
    embed-resources: true
editor: visual
theme: lux
execute: 
  echo: true
  message: false
  warning: false
---
```{r}
install.packages("sf")
install.packages("stars")
install.packages("tmap")

library(sf) # for vector data (more soon!)
library(stars) # for raster data (more soon!)
library(tmap) # for static and interactive maps
library(here)
```

```{r}
# raster of global elevations
world_elevation <- read_stars(here("data","worldelevation.tif"))

# country boundaries
world_vector <- read_sf(here("data","worldvector.gpkg"))

# major cities
world_cities <- read_sf(here("data","worldcities.gpkg"))
```

```{r}
# plotting a single spatial object

tm_shape(world_vector) + # defines the spatial object to plot
  tm_polygons() # defines how to plot the object
```

```{r}
# plotting two spatial objects

tm_shape(world_vector) + # defines the FIRST spatial object to plot
  tm_polygons() + # defines how to plot the FIRST object
tm_shape(world_cities) + # defines the SECOND object to plot
  tm_dots() # defines how to plot the SECOND object
```

```{r}
# plotting vector and raster spatial objects

tm_shape(world_elevation) + # plot global elevations
  tm_raster() + # tm_raster for raster data
tm_shape(world_vector) +
  tm_borders() +
tm_shape(world_cities) +
  tm_dots() +
  tm_text("name")
```

```{r}
tm_shape(world_elevation, bbox = c(-15, 35, 45, 65)) + # add bounding box to restrict extent
  tm_raster() + 
tm_shape(world_vector) +
  tm_borders() 
```

```{r}
tm_shape(world_elevation, bbox = world_cities) + # bounding box = extent of world_cities
  tm_raster() + 
tm_shape(world_vector) +
  tm_borders() 
```
```{r}
tm_shape(world_vector) +
  tm_polygons(col = "lightblue",
              border.col = "black",
              lwd = 0.5,
              lty = "dashed")
              
tm_shape(world_vector) +
  tm_fill(col = "lightblue")

tm_shape(world_vector) +
  tm_fill("CO2_emissions")
              
```

```{r}
tm_shape(world_cities) +
  tm_squares()
```

```{r}
tm_shape(world_vector) +
  tm_polygons("life_expectancy",
              palette = c("yellow", "darkgreen"),
              title = "Life Expectancy (years)")
```

```{r}
install.packages("viridisLite")
library(viridisLite)
```

```{r}
tm_shape(world_vector) +
  tm_polygons("life_expectancy",
              palette = viridis(option = "plasma", 8),
              title = "Life Expectancy (years)")
```
```{r}
tm_shape(world_vector)+
  tm_polygons() +
  tm_shape(world_cities) +
  tm_symbols(size = "pop2020",
             legend.size.is.portrait = TRUE)
```

```{r}
tm_shape(world_vector) +
  tm_graticules() +
  tm_fill()

```

```{r}
tm_shape(world_vector) +
  tm_fill() +
  tm_scale_bar(  ) +
  tm_compass(position = c("left", "top"))
```


```{r}
tmap_mode("plot")

map1 <- tm_shape(world_vector) +
  tm_fill(col = "wb_income_region",
          palette = viridisLite::cividis(5),
          title = "Regional Income") +
  tm_layout(bg.color = "magenta",
            main.title = "Global Income by Smurf-Clan",
            frame = FALSE)

tmap_save(map1, here("tmap-example.png"))
```

```{r}
tmap_mode("plot")

```





